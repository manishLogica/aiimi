version: '2.2'
x-environment:
  # CERTS_DIR: $CERTS_DIR
  # KIBANA_CERT_PASSWORD: $KIBANA_CERT_PASSWORD
  &common-env
  RELEASE: &RELEASE $RELEASE
  IM_ELASTIC_SERVERS: $IM_ELASTIC_SERVERS
  IM_ELASTIC_USER: $IM_ELASTIC_USER
  IM_ELASTIC_PASSWORD: $IM_ELASTIC_PASSWORD
  IM_ELASTIC_PREFIX: $IM_ELASTIC_PREFIX
  IM_INTERNAL_CERTS: &CERTS_DIR $IM_INTERNAL_CERTS
  IM_DOTNET: $IM_DOTNET
  IM_LICENSE_KEY: $IM_LICENSE_KEY
  IM_LICENSE_SECRET: $IM_LICENSE_SECRET
  IM_LOGS: $IM_LOGS
  IM_PORT_JOB_AGENT: &IM_PORT_JOB_AGENT $IM_PORT_JOB_AGENT
  IM_PORT_SOURCE_AGENT: &IM_PORT_SOURCE_AGENT $IM_PORT_SOURCE_AGENT
  IM_PORT_SECURITY_AGENT: &IM_PORT_SECURITY_AGENT $IM_PORT_SECURITY_AGENT
  IM_PORT_ENRICHMENT_AGENT: &IM_PORT_ENRICHMENT_AGENT $IM_PORT_ENRICHMENT_AGENT
  IM_PORT_OCR_AGENT: &IM_PORT_OCR_AGENT $IM_PORT_OCR_AGENT
  IM_PORT_CONTENT_AGENT: &IM_PORT_CONTENT_AGENT $IM_PORT_CONTENT_AGENT
  IM_PORT_MIGRATION_AGENT: &IM_PORT_MIGRATION_AGENT $IM_PORT_MIGRATION_AGENT
  IM_HOST_JOB_AGENT: &IM_HOST_JOB_AGENT $IM_HOST_JOB_AGENT
  IM_HOST_SOURCE_AGENT: &IM_HOST_SOURCE_AGENT $IM_HOST_SOURCE_AGENT
  IM_HOST_SECURITY_AGENT: &IM_HOST_SECURITY_AGENT $IM_HOST_SECURITY_AGENT
  IM_HOST_ENRICHMENT_AGENT: &IM_HOST_ENRICHMENT_AGENT $IM_HOST_ENRICHMENT_AGENT
  IM_HOST_OCR_AGENT: &IM_HOST_OCR_AGENT $IM_HOST_OCR_AGENT
  IM_HOST_CONTENT_AGENT: &IM_HOST_CONTENT_AGENT $IM_HOST_CONTENT_AGENT
  IM_HOST_MIGRATION_AGENT: &IM_HOST_MIGRATION_AGENT $IM_HOST_MIGRATION_AGENT
  IM_PORT_ADMIN_API: &IM_PORT_ADMIN_API $IM_PORT_ADMIN_API
  IM_PORT_SEARCH_API: &IM_PORT_SEARCH_API $IM_PORT_SEARCH_API
  IM_PORT_DS_API: &IM_PORT_DS_API $IM_PORT_DS_API
  IM_HOST_ADMIN_API: &IM_HOST_ADMIN_API $IM_HOST_ADMIN_API
  IM_HOST_SEARCH_API: &IM_HOST_SEARCH_API $IM_HOST_SEARCH_API
  IM_HOST_DS_API: &IM_HOST_DS_API $IM_HOST_DS_API
  IM_HOST_FRONTEND: &IM_HOST_FRONTEND $IM_HOST_FRONTEND
x-container:
  &container
  image: aiimilabs/fe:${RELEASE}
  volumes:
    [
      'certs:$IM_INTERNAL_CERTS',
      # 'agent_persist:$IM_AGENTS_COMMON_VOLUME',
      # 'samplefiles:/samplefiles'
    ]
  restart: "no"
  # extra_hosts:
  #   - "host.docker.internal:host-gateway"
  # restart: unless-stopped
services:
  frontend:
    container_name: ${IM_HOST_FRONTEND}
    <<: *container
    environment:
      <<: *common-env
      # IM_WORKER_NAME: cloud
      # IM_REMOTE_ADDRESS: https://${IM_HOST_FRONTEND}
    # command: tail -f /dev/null
    command: nginx -g 'daemon off;'
    ports:
      - 80:80
volumes: { "certs" }
